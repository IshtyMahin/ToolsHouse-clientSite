import React from "react";
import Navbar from "../Shared/Navbar";

const Blogs = () => {
  return (
    <div>
      <Navbar></Navbar>
      <div className="container">
        <div className="border m-3 p-3">
          <h2 className="text-xl text-red-400">
            How will you improve the performance of a React Application?
          </h2>
          <p>
            react অ্যাপ্লিকেশনগুলিতে, আমরা ডিফল্টরূপে একটি খুব দ্রুত UI নিশ্চিত
            করি৷ যাইহোক, একটি অ্যাপ্লিকেশন বৃদ্ধির সাথে সাথে বিকাশকারীরা কিছু
            পারফরম্যান্স সমস্যার সম্মুখীন হতে পারে।
          </p>
          <p>
            আমরা pre-optimization কৌশল সহ একটি React অ্যাপ্লিকেশনের কর্মক্ষমতা
            Optimize করার পাঁচটি গুরুত্বপূর্ণ উপায় নিয়ে আলোচনা করব। এর মধ্যে
            রয়েছে:
          </p>
          <div className="my-3 ">
            <p>১।যেখানে প্রয়োজন সেখানে component অবস্থা স্থানীয় রাখা</p>
            <p>
              ২।অপ্রয়োজনীয় রি-রেন্ডার প্রতিরোধ করার জন্য React components
              গুলাকে স্মরণ করা
            </p>
            <p>৩। ডাইনামিক import () ব্যবহার করে react এ কোড-বিভাজন</p>
            <p>৪। react e উইন্ডো করা বা তালিকা ভার্চুয়ালাইজেশন করা।</p>
            <p>৫। react এর অলস লোডিং চিত্র ।</p>
          </div>
          <p>
            একটি React অ্যাপ্লিকেশন অপ্টিমাইজ করার আগে, আমাদের অবশ্যই বুঝতে হবে
            যে কীভাবে প্রতিক্রিয়া তার UI আপডেট করে এবং কীভাবে একটি অ্যাপের
            কার্যকারিতা পরিমাপ করা যায়। এটি যেকোনো react কর্মক্ষমতা সমস্যা
            সমাধান করা সহজ করে তোলে।
          </p>
        </div>
        <div className="border m-3 p-3">
          <h2 className="text-xl text-red-400">
            What are the different ways to manage a state in a React
            application?
          </h2>
          <p>
            আপনার React অ্যাপগুলিতে আপনাকে সঠিকভাবে পরিচালনা করার জন্য চারটি
            প্রধান ধরণের state রয়েছে:
          </p>
          <p>
            1. Local state : Local state হল ডেটা যা আমরা এক বা অন্য component
            পরিচালনা করি। local state প্রায়শই useState হুক ব্যবহার করে React এ
            পরিচালিত হয়।
          </p>
          <p>
            2. Gobal State : Global state হল ডেটা যা আমরা একাধিক component জুড়ে
            পরিচালনা করি। আমরা যখন আমাদের অ্যাপের যেকোনো জায়গায় বা অন্তত
            একাধিক component এ ডেটা পেতে এবং আপডেট করতে চাই তখন gobal state
            প্রয়োজনীয়।
          </p>
          <p>
            3.Server state :একটি বহিরাগত সার্ভার থেকে আসা ডেটা যা অবশ্যই আমাদের
            UI অবস্থার সাথে একত্রিত হতে হবে. server state একটি সাধারণ ধারণা,
            কিন্তু আমাদের স্থানীয় এবং বিশ্বব্যাপী UI অবস্থার পাশাপাশি পরিচালনা
            করা কঠিন হতে পারে।
          </p>
          <p>
            4. URL state: pathName এবং query প্যারামিটার সহ আমাদের URL-এ
            বিদ্যমান ডেটা। urls state, state এর একটি বিভাগ হিসাবে অনুপস্থিত,
            কিন্তু এটি একটি গুরুত্বপূর্ণ।
          </p>
        </div>
        <div className="border m-3 p-3">
          <h2 className="text-xl text-red-400">
            How does prototypical inheritance work?
          </h2>
          <p>
            Prototypical inheritance হল জাভাস্ক্রিপ্টের একটি বৈশিষ্ট্য যা
            বস্তুতে পদ্ধতি এবং বৈশিষ্ট্য যোগ করতে ব্যবহৃত হয়। এটি এমন একটি
            পদ্ধতি যার মাধ্যমে একটি বস্তু অন্য বস্তুর বৈশিষ্ট্য এবং পদ্ধতির
            উত্তরাধিকারী হতে পারে। ঐতিহ্যগতভাবে, একটি বস্তুর [[prototype]] পেতে
            এবং সেট করার জন্য, আমরা Object.getPrototypeOf এবং Object ব্যবহার
            করি।
          </p>
        </div>
        <div className="border m-3 p-3">
          <h2 className="text-xl text-red-400">
            {" "}
            Why you do not set the state directly in React.{" "}
          </h2>
          <p>
            নিম্নলিখিত কারণগুলির কারণে কোনো কিছুর কখনই সরাসরি State আপডেট করা
            উচিত নয়:
          </p>
          <p>
            1. আপনি যদি এটি সরাসরি আপডেট করেন, তাহলে setState() কে পরে কল করলে
            আপনার করা আপডেটটি বদলে যেতে পারে।
          </p>
          <p>
            2.আপনি যখন state কে সরাসরি আপডেট করেন, তখন এটি অবিলম্বে this.state
            পরিবর্তন করে না। পরিবর্তে, এটি একটি pending অবস্থার রূপান্তর তৈরি
            করে, এবং এই পদ্ধতিতে কল করার পরে এটি অ্যাক্সেস করা শুধুমাত্র বর্তমান
            মান ফিরিয়ে দেবে।{" "}
          </p>
          <p>3. আপনি সমস্ত Components জুড়ে State এর নিয়ন্ত্রণ হারাবেন.</p>
        </div>
        <div className="border m-3 p-3">
          <h2 className="text-xl text-red-400">
            What is a unit test? Why should write unit tests?
          </h2>
          <p>Unit test এ সফ্টওয়্যার প্রোগ্রাম বা অ্যাপ্লিকেশনের পৃথক উপাদান পরীক্ষা করা জড়িত। এর পিছনে মূল উদ্দেশ্য হল সমস্ত পৃথক অংশগুলি উদ্দেশ্য হিসাবে কাজ করছে কিনা তা পরীক্ষা করা। একটি unit সফ্টওয়্যারের সবচেয়ে ছোট সম্ভাব্য উপাদান হিসাবে পরিচিত যা পরীক্ষা করা যেতে পারে। সাধারণত, এতে কয়েকটি ইনপুট এবং একটি একক আউটপুট থাকে।</p>
          <p> Unit test নিশ্চিত করে যে সমস্ত কোড স্থাপনের আগে গুণমানের মান পূরণ করে। এটি একটি নির্ভরযোগ্য প্রকৌশল পরিবেশ নিশ্চিত করে যেখানে গুণমান সর্বাগ্রে। প্রোডাক্ট ডেভেলপমেন্ট লাইফ সাইকেল চলাকালীন, unit testing সময় এবং অর্থ সাশ্রয় করে এবং ডেভেলপারদের আরও দক্ষতার সাথে আরও ভাল কোড লিখতে সাহায্য করে</p>
        </div>
      </div>
    </div>
  );
};

export default Blogs;
